# amd64 env template
.amd64:
  extends: .dind
  variables:
    DOCKER_ARCH_ENV_FILE: .env/amd64.env
    DOCKER_VERSION_ENV_FILE: .env/versions.env 
    DOCKER_BUILD_IMAGE_TAG: ${DOCKER_BUILD_IMAGE_TAG_AMD64}
  tags: []

# arm64 env template
.arm64:
  extends: .dind
  variables:
    DOCKER_ARCH_ENV_FILE: .env/arm64.env
    DOCKER_VERSION_ENV_FILE: .env/versions.env
    DOCKER_BUILD_IMAGE_TAG: ${DOCKER_BUILD_IMAGE_TAG_ARM64}
  tags:
    - arm64
    - docker

# create image template
.create:
  script:
    - >
      docker buildx build --no-cache --force-rm --compress --load \
        --platform "$DOCKER_PLATFORM" \
        --build-arg "DOCKER_BASE_IMAGE=$DOCKER_BASE_IMAGE" \
        --build-arg "DOCKER_BUILDX_VERSION=$DOCKER_BUILDX_VERSION" \
        --build-arg "FORGEJO_VERSION=$FORGEJO_VERSION" \
        --build-arg "WOODPECKER_VERSION=$WOODPECKER_VERSION" \
        --build-arg "GITLAB_VERSION=$GITLAB_VERSION" \
        --build-arg "GO_VERSION=$GO_VERSION" \
        --build-arg "FORGEJO_ARCH=$FORGEJO_ARCH" \
        --build-arg "WOODPECKER_ARCH=$WOODPECKER_ARCH" \
        --build-arg "GITLAB_ARCH=$GITLAB_ARCH" \
        --build-arg "GO_ARCH=$GO_ARCH" \
        -t "${DOCKER_BUILD_IMAGE_NAME}" \
        -t "${CI_REGISTRY_BUILD_IMAGE_NAME}:${DOCKER_BUILD_IMAGE_TAG}" \
        .
    - docker push "${CI_REGISTRY_BUILD_IMAGE_NAME}:${DOCKER_BUILD_IMAGE_TAG}"

# docker in docker template
.dind:
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  before_script:
    - |
      printf "Loading version environment variables from ${DOCKER_VERSION_ENV_FILE} file\n"
      export $(grep -v '^[[:space:]]*#' ${DOCKER_VERSION_ENV_FILE} | xargs)

      printf "Loading architecture environment variables from ${DOCKER_ARCH_ENV_FILE} file\n"
      export $(grep -v '^[[:space:]]*#' ${DOCKER_ARCH_ENV_FILE} | xargs)
      
      printf "building Versions:\n"
      printf " %s: %s\n" "Forgejo Runner" "$FORGEJO_VERSION"
      printf " %s: %s\n" "Woodpecker Agent" "$WOODPECKER_VERSION"
      printf " %s: %s\n" "Gitlab Runner" "$GITLAB_VERSION"

      printf "building environment:\n"
      printf " %s: %s\n" "DOCKER_BUILDX_VERSION" "$DOCKER_BUILDX_VERSION"
      printf " %s: %s\n" "DOCKER_CREDENTIAL_HELPER_VERSION" "$DOCKER_CREDENTIAL_HELPER_VERSION"
      printf " %s: %s\n" "DOCKER_BUILDX_ARCH" "$DOCKER_BUILDX_ARCH"
      printf " %s: %s\n" "DOCKER_CREDENTIAL_HELPER_ARCH" "$DOCKER_CREDENTIAL_HELPER_ARCH"
      printf " %s: %s\n" "DOCKER_PLATFORM" "$DOCKER_PLATFORM"
      printf " %s: %s\n" "DOCKER_BASE_IMAGE" "$DOCKER_BASE_IMAGE"      
      printf " %s: %s\n" "DOCKER_BUILD_IMAGE_NAME" "$DOCKER_BUILD_IMAGE_NAME"
      printf " %s: %s\n" "DOCKER_BUILD_IMAGE_TAG" "$DOCKER_BUILD_IMAGE_TAG"   
      printf " %s: %s\n" "FORGEJO_ARCH" "$FORGEJO_ARCH"
      printf " %s: %s\n" "WOODPECKER_ARCH" "$WOODPECKER_ARCH"
      printf " %s: %s\n" "GITLAB_ARCH" "$GITLAB_ARCH"

    - apk add --no-cache make bash curl libsecret pass gpg-agent openssh-client
    - .gitlab/docker-credential-init.sh "${GPG_USER}" "${GPG_MAIL}"
    - mkdir -p ~/.docker/cli-plugins
    - |
      curl -sSLo ~/.docker/cli-plugins/docker-buildx \
        "https://github.com/docker/buildx/releases/download/v${DOCKER_BUILDX_VERSION}/buildx-v${DOCKER_BUILDX_VERSION}.${DOCKER_BUILDX_ARCH}"
    - chmod +x ~/.docker/cli-plugins/docker-buildx
    - mkdir -p /usr/local/bin
    - |
      curl -sSLo /usr/local/bin/docker-credential-pass \
        "https://github.com/docker/docker-credential-helpers/releases/download/v${DOCKER_CREDENTIAL_HELPER_VERSION}/docker-credential-pass-v${DOCKER_CREDENTIAL_HELPER_VERSION}.${DOCKER_CREDENTIAL_HELPER_ARCH}"
    - chmod +x /usr/local/bin/docker-credential-pass
    - docker context create tls-environment >/dev/null
    - docker buildx create --use tls-environment >/dev/null
    - echo "${DOCKER_AUTH_CONFIG}" > ~/.docker/config.json
    - echo "${CI_REGISTRY_PASSWORD}" | awk '{print $0}' | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"

  after_script:
    - docker logout
