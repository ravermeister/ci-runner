# amd64 env template
.amd64:
  extends: .dind
  variables:
    BUILDX_ARCHITECTURE: linux-amd64
    DOCKER_CREDENTIAL_HELPER_ARCHITECTURE: linux-amd64
    DOCKER_TARGET_PLATFORM: linux/amd64
    DOCKER_TARGET_IMAGE_TAG: amd64
    DOCKER_BUILD_TARGET: ci-runner-amd64
  tags: []

# arm64 env template
.arm64:
  extends: .dind
  variables:
    BUILDX_ARCHITECTURE: linux-arm64
    DOCKER_CREDENTIAL_HELPER_ARCHITECTURE: linux-arm64
    DOCKER_TARGET_PLATFORM: linux/arm64
    DOCKER_TARGET_IMAGE_TAG: arm64
    DOCKER_BUILD_TARGET: ci-runner-arm64
  tags:
    - arm64
    - docker

# create image template
.create:
  script:
    - echo "build Forgejo Runner Version $FORGEJO_VERSION"
    - >
      docker buildx build --no-cache --force-rm --compress --load \
        --platform "$DOCKER_TARGET_PLATFORM" \
        --build-arg "FORGEJO_VERSION=$FORGEJO_VERSION" \
        --build-arg "WOODPECKER_VERSION=$WOODPECKER_VERSION" \
        --build-arg "GO_VERSION=$GO_VERSION" \
        --target "$DOCKER_BUILD_TARGET" \
        -t "${IMAGE_NAME}" \
        -t "${CI_REGISTRY_IMAGE}:${DOCKER_TARGET_IMAGE_TAG}" \
        .
    - docker push "${CI_REGISTRY_IMAGE}:${DOCKER_TARGET_IMAGE_TAG}"

# docker in docker template
.dind:
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  before_script:
    - apk add --no-cache make bash curl libsecret pass gpg-agent openssh-client
    - .gitlab/docker-credential-init.sh "${GPG_USER}" "${GPG_MAIL}"
    - mkdir -p ~/.docker/cli-plugins
    - curl -sSLo ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.$BUILDX_ARCHITECTURE
    - chmod +x ~/.docker/cli-plugins/docker-buildx
    - mkdir -p /usr/local/bin
    - curl -sSLo /usr/local/bin/docker-credential-pass https://github.com/docker/docker-credential-helpers/releases/download/$DOCKER_CREDENTIAL_HELPER_VERSION/docker-credential-pass-$DOCKER_CREDENTIAL_HELPER_VERSION.$DOCKER_CREDENTIAL_HELPER_ARCHITECTURE
    - chmod +x /usr/local/bin/docker-credential-pass
    - docker context create tls-environment >/dev/null
    - docker buildx create --use tls-environment >/dev/null
    - echo "${DOCKER_AUTH_CONFIG}" > ~/.docker/config.json
    - echo "${CI_REGISTRY_PASSWORD}" | awk '{print $0}' | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  after_script:
    - docker logout
