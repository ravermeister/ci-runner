#!/bin/bash

clean_system() {
	# clean apt
	apt -yq clean
	rm -rf /var/lib/apt/lists/*
	# Remove MOTD
	rm -rf /etc/update-motd.d /etc/motd /etc/motd.dynamic
	ln -fs /dev/null /run/motd.dynamic
	# Remove generated SSH Keys
	rm /etc/ssh/ssh_host_ecdsa_key /etc/ssh/ssh_host_ecdsa_key.pub \
	/etc/ssh/ssh_host_ed25519_key /etc/ssh/ssh_host_ed25519_key.pub \
	/etc/ssh/ssh_host_rsa_key /etc/ssh/ssh_host_rsa_key.pub
}

update_system() {
	apt -yq update
  apt -yq dist-upgrade
}

install_docker_cli() {
		# Add Docker's official GPG key:
    apt -yq update
    apt -yq install ca-certificates curl
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc

    # Add the repository to Apt sources:
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt -yq update
	apt -yq install docker-ce-cli
}

install_node() {
	apt -yq install nodejs npm
}

install_tools() {
	tar -C /usr/local/share -xzf /tmp/tools/go.tar.gz
	while IFS= read -r -d '' file; do
		ln -s "$file" /usr/local/bin
	done <  <(find /usr/local/share/go/bin -type f -print0)

	rm -rf /tmp/tools
}

init_container() {
	set -eux
	export DEBIAN_FRONTEND=noninteractive

	update_system
	install_docker_cli
	install_node
	install_tools
	clean_system
}

start_container() {
	cd "$HOME" && forgejo-runner daemon
}

usage() {
	BASE_NAME="$(basename "$0")"
	printf "%s\t%s\t%s\n" "${BASE_NAME}" "setup" "installs all necessary packages"
	printf "%s\t%s\t%s\n" "${BASE_NAME}" "run" "starts the forgejo-runner"
}

###########

case $1 in
	setup)
		init_container
	;;
	run)
		start_container
	;;
	*)
		usage
	;;
esac
