services:
  docker:
    image: docker.io/docker:dind
    hostname: docker
    privileged: true
    restart: unless-stopped
    networks:
      - ci-bridge-net
    command: [
      'dockerd', '--tls=false', '--storage-driver=overlay2',
      '-H', 'tcp://0.0.0.0:2375',
      '-H', 'unix:///var/run/docker/docker.sock',
      # if you use pihole, this could lead to dns issues, so we force to use quad9
      # note, if you don't use ipv6 remove the last two dns servers
      '--dns=9.9.9.9', '--dns=149.112.112.112', '--dns=2620:fe::fe', '--dns=2620:fe::9'
    ]
    healthcheck:
      test: [
        "CMD-SHELL",
        "docker -H tcp://docker:2375 info",
        "&&",
        "test -S /var/run/docker/docker.sock"
      ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      # if you need the docker.sock somewhere
      - type: bind
        source: /media/usb/ci-docker/run
        target: /var/run/docker
      # persistent docker data, e.g., downloaded container images
      - type: bind
        source: /media/usb/ci-docker/lib
        target: /var/lib/docker
  gitlab:
    image: docker.io/ravermeister/ci-runner
    hostname: gitlab
    restart: unless-stopped
    networks:
      - ci-bridge-net
    depends_on:
      docker:
        condition: service_healthy
    environment:
      CI_RUNNER: gitlab
      DOCKER_HOST: tcp://docker:2375
    command:
      - "run"
      - "--config"
      - "/etc/gitlab-runner/config.toml"
      - "--working-directory"
      - "/opt/gitlab"
    volumes:
      - /etc/ci-runner/gitlab/:/etc/gitlab-runner
      - type: bind
        source: /media/usb/ci-runner/gitlab/home
        target: /opt/gitlab
      - type: bind
        source: /media/usb/ci-runner/gitlab/cache
        target: /opt/cache
  forgejo:
    image: docker.io/ravermeister/ci-runner
    hostname: forgejo
    restart: unless-stopped
    networks:
      - ci-bridge-net
    depends_on:
      docker:
        condition: service_healthy
    environment:
      CI_RUNNER: forgejo
      DOCKER_HOST: tcp://docker:2375
    command:
      - "-c"
      - "/etc/forgejo.yml"
      - "daemon"
    volumes:
      - /etc/ci-runner/forgejo/runner.cfg:/root/.runner
      - /etc/ci-runner/forgejo/config.yml:/etc/forgejo.yml
      - type: bind
        source: /media/usb/ci-runner/forgejo/cache
        target: /root/.cache/actcache
      - type: bind
        source: /media/usb/ci-runner/forgejo/host
        target: /root/.cache/act
      - type: bind
        source: /media/usb/ci-runner/forgejo/docker
        target: /workspace
  woodpecker:
    image: docker.io/ravermeister/ci-runner
    hostname: woodpecker
    restart: unless-stopped
    networks:
      - ci-bridge-net
    depends_on:
      docker:
        condition: service_healthy
    environment:
      CI_RUNNER: woodpecker
      DOCKER_HOST: tcp://docker:2375
      WOODPECKER_SERVER: grpc.ci.codeberg.org
      WOODPECKER_AGENT_SECRET_FILE: /etc/woodpecker/codeberg.secret
      WOODPECKER_GRPC_SECURE: true
      WOODPECKER_HEALTHCHECK: false
      WOODPECKER_BACKEND: docker
      WOODPECKER_HOSTNAME: woodpecker
      WOODPECKER_AGENT_LABELS: owner=raver
      WOODPECKER_MAX_WORKFLOWS: 2
    volumes:
      - /etc/ci-runner/woodpecker:/etc/woodpecker
      - /media/usb/ci-runner/woodpecker/tmp:/root/woodpecker/tmp
networks:
  ci-bridge-net:
    driver: bridge
    # disable if you do not have ipv6
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.name: ci-bridge-net
